/**
 * Copyright (c) KMG. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.sbk.api.impl";
option java_outer_classname = "SbkGrpc";

import "google/protobuf/empty.proto";

service SBKService {
  rpc getConfig (google.protobuf.Empty) returns (Config) {}
  rpc registerClient (Config) returns (ClientID) {}
  rpc startTransaction (Transaction) returns (google.protobuf.Empty) {}
  rpc addLatenciesRecord (LatenciesRecord) returns (google.protobuf.Empty) {}
  rpc addLatenciesList (LatenciesList) returns (google.protobuf.Empty) {}
  rpc endTransaction (Transaction) returns (google.protobuf.Empty) {}
  rpc closeClient (ClientID) returns (google.protobuf.Empty) {}
}

enum TimeUnit {
  ms = 0;
  mcs = 1;
  ns = 2;
}

enum Action {
  Writing = 0;
  Reading = 1;
  Write_Reading = 2;
}

message Config {
  string storageName = 1;
  TimeUnit timeUnit = 2;
  Action action = 3;
}

message ClientID {
  int32 id = 1;
}

message Transaction {
  int32 clientID = 1;
  int64 transID = 2;
  int64 seqNum = 3;
}

message LatenciesRecord {
  Transaction transaction = 1;
  int32 writers = 2;
  int32 readers = 3;
  int32 maxWriters = 4;
  int32 maxReaders = 5;
  int64 totalRecords = 6;
  int64 validLatencyRecords = 7;
  int64 lowerLatencyDiscardRecords = 8;
  int64 higherLatencyDiscardRecords = 9;
  int64 invalidLatencyRecords = 10;
  int64 totalBytes = 11;
  int64 totalLatency = 12;
  int64 maxLatency = 13;
}

message LatenciesList {
  Transaction transaction = 1;
  map<int64, int64 > latencies = 2;
}
